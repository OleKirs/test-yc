---
# MySQL install & enable replication.
# First run cmd: ansible-playbook -i inventory/stage/hosts.yml sql.yml -vv --tags never,config
- hosts: db01,db02
  vars:
    dba_pw: "{{ dba_pass | default('11s3cr3tPaSSwordR') }}"
    repl_pw: "{{ repl_pass | default('22s3cr3tPaSSwordR') }}"
    rwuser_pw: "{{ rwuser_pass | default('33s3cr3tPaSSwordR') }}"
    wp_db: "{{ db_name | default('wordpress') }}"
    wp_user: "{{ db_user | default('wordpress') }}"
    wp_user_pw: "{{ db_pass | default('wordpress') }}"
  become: true
  gather_facts: false
  tasks:
  - name: Install DB
    tags: never, install
    block:
      - name: Install MariaDB Server
        apt: name=mariadb-server state=latest update_cache=yes
      - name: Install python3-pip
        apt: name=python3-pip state=latest
      - name: Make sure pymysql is present
        become: true # needed if the other tasks are not played as root
        pip: name=pymysql state=present
      - name: Install python module
        apt: name=python-mysqldb state=present
      - name: Create 'root' account
        mysql_user: name=dba login_unix_socket=/var/run/mysqld/mysqld.sock host="%" password='{{ dba_pw }}' priv="*.*:ALL,GRANT" check_implicit_admin=true
      - name: Removes the MySQL test database
        community.mysql.mysql_db: name=test state=absent login_user=dba login_password='{{ dba_pw }}'
      - name: Removes all anonymous user accounts
        community.mysql.mysql_user: name='' host_all=yes state=absent  login_user=dba login_password='{{ dba_pw }}'
      - name: Create replication account
        mysql_user: name=repl host="%" password='{{ repl_pw }}' priv="*.*:REPLICATION SLAVE" state=present login_user=dba login_password='{{ dba_pw }}'
      - name: Create readwrite user
        mysql_user: name=rwuser host="%" password='{{ rwuser_pw }}' priv="*.*:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP" state=present login_user=dba login_password='{{ dba_pw }}'
      - name: Creating database for wordpress
        community.mysql.mysql_db: name='{{ wp_db }}' state=present login_user='dba' login_password='{{ dba_pw }}'
      - name: Create user for 'wordpress'
        community.mysql.mysql_user: state=present name={{ wp_user }} password={{ wp_user_pw }} host='%' priv="{{ wp_db }}.*:ALL,GRANT" login_user=dba login_password='{{ dba_pw }}'
      - name: Modify configuration file to listen on all interfaces
        lineinfile: dest=/etc/mysql/mariadb.conf.d/50-server.cnf regexp="^bind-address" line="bind-address = 0.0.0.0"
      - name: Modify configuration file to add db in replication
        lineinfile: dest=/etc/mysql/mariadb.conf.d/50-server.cnf regexp="^#binlog_do_db" insertafter="^#binlog_do_db" line="binlog_do_db = {{ wp_db }}"
      - name: Modify configuration file to enable bin.log
        lineinfile: dest=/etc/mysql/mariadb.conf.d/50-server.cnf regexp="^#log_bin" insertafter="^##log_bin" line="log_bin = /var/log/mysql/mysql-bin.log"
      - name: Modify configuration file to setup server ID
        when: "'db01' in inventory_hostname"
        lineinfile: dest=/etc/mysql/mariadb.conf.d/50-server.cnf regexp="^#server-id" line="server-id=1"
      - name: Modify configuration file to setup server ID
        when: "'db02' in inventory_hostname"
        lineinfile: dest=/etc/mysql/mariadb.conf.d/50-server.cnf regexp="^#server-id" line="server-id=2" 
      - name: Restart mysql service
        ansible.builtin.service: name=mysql state=restarted
  - name: Config DB01 as master
    tags: config
    when: "'db01' in inventory_hostname"
    block:
      - name: RESET MASTER
        community.mysql.mysql_replication: mode=resetprimary login_user='dba' login_password='{{ dba_pw }}'
        register: result
      - name: Print return information from the previous task
        ansible.builtin.debug: var=result verbosity=2
      - name: Restart mysql service
        ansible.builtin.service: name=mysql state=restarted
  - name: Config DB02 as slave
    tags: config
    when: "'db02' in inventory_hostname"
    block:
      - name: Stop mysql replica thread
        community.mysql.mysql_replication: mode=stopreplica connection_name='primary-1' login_user='dba' login_password='{{ dba_pw }}'
      - name: Change primary to use replication
        community.mysql.mysql_replication: mode=changeprimary connection_name='primary-1' primary_host='10.20.0.150' primary_port='3306' primary_user='repl' primary_password='{{ repl_pw }}' primary_use_gtid=current_pos login_user='dba' login_password='{{ dba_pw }}'
        register: result2
      - name: Print return information from the previous task
        ansible.builtin.debug: var=result2 verbosity=2
      - name: Start MariaDB replica with connection
        community.mysql.mysql_replication: mode=startreplica connection_name='primary-1' login_user='dba' login_password='{{ dba_pw }}'
      - name: Restart mysql service
        ansible.builtin.service: name=mysql state=restarted
# _EOF_
